using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using MalwareHuntShared;
using MalwareHuntShared.Objects;

namespace MalwareHuntAgent.DataCapture
{
    public class BaseDataCapture<T,U> where T : AbstractActivity, new()
        where U:BaseDataCapture<T,U>,new()
    {
        protected List<T> m_dataList = new List<T>();
        Thread m_writerThread;
        Object m_lock= new Object();

        static U m_instance;

        public static U Instance
        {
            get

            {
                if (m_instance == null)
                    m_instance = new U();
                return m_instance;
            }
        }

        public virtual String CategoryFileName
        {
            get { return (new T()).TypeOfActivity.ToString(); }
            set {  }
        }
        public BaseDataCapture()
        {
            m_writerThread = new Thread(SaveData);
            m_writerThread.Start();
        }

        public void SaveData()
        {
            while (!Program.s_cancelToken.IsCancellationRequested)
            {
                lock (m_lock)
                {
                    try
                    {
                        var json = Utility.Serialize(m_dataList);
                        File.WriteAllText(Program.DATA_DIR + "\\" + CategoryFileName, json);
                        m_dataList.Clear();
                    }
                    catch { }
                }

                Program.s_cancelToken.WaitHandle.WaitOne(5000);
            }

        }
    }
}
