using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using MalwareHuntShared;
using MalwareHuntShared.Objects;

namespace MalwareHuntAgent.DataCapture
{
    public class ProcessCapture
    {
        List<ProcessInfo> m_processList = new List<ProcessInfo>();

        static ProcessCapture m_instance = new ProcessCapture();
        Thread m_processThread;
        object m_lock = new object();

        public static ProcessCapture Instance
        {
            get
            {
                return m_instance;
            }
        }

        public void Start()
        {
            m_processThread = new Thread(SaveData);
            m_processThread.Start();
        }

        void LoadProcesses()
        {
            lock (m_lock)
            {
                m_processList.Clear();
                var procList = Process.GetProcesses();
                foreach (var item in procList)
                {
                    bool result = false;
                    ProcessInfo pInfo = new ProcessInfo(item, out result);

                    if (result)
                    {
                        m_processList.Add(pInfo);
                        ModuleCapture.Instance.AddModule(item.MainModule.FileName);
                    }
                }
            }
        }

        public void SaveData()
        {
            while (!Program.s_cancelToken.IsCancellationRequested)
            {
                LoadProcesses();
                lock (m_lock)
                {
                    try
                    {
                        var json = Utility.Serialize(m_processList);
                        File.WriteAllText(Program.DATA_DIR + "\\" + ActivityType.ProcessInfo.ToString(), json);
                    }
                    catch { }
                }

                Program.s_cancelToken.WaitHandle.WaitOne(5000);
            }

        }
    }
}
