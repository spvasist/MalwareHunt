using System;
using System.Collections.Generic;
using System.Configuration;
using System.IO;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace MalwareHuntAgent
{
    public class DataSender
    {
        static DataSender m_instance = new DataSender();
        Thread m_aggregatorThread;
        public static DataSender Instance
        {
            get
            {
                return m_instance;
            }
        }

        private DataSender()
        {

        }
        public void Start()
        {
            m_aggregatorThread = new Thread(SendData);
            m_aggregatorThread.Start();
        }

        void SendData()
        {
            while (!Program.s_cancelToken.IsCancellationRequested)
            {
                var files = Directory.EnumerateFiles(Program.DATA_DIR);
                foreach(var file in files)
                {
                    try
                    {                        
                        byte[] data = File.ReadAllBytes(file);
                        if (data.Length < 3)
                            continue;
                        string activityName = Path.GetFileName(file);
                        string hostname = ConfigurationManager.AppSettings["HOSTNAME"];
                        int port = int.Parse(ConfigurationManager.AppSettings["PORT"]);

                        HttpWebRequest request = (HttpWebRequest)WebRequest.CreateHttp(string.Format("http://{0}:{1}?machineid={2}&type={3}&activityname={4}"
                            , hostname
                            , port
                            ,Program.s_machineID
                            ,"data"
                            , activityName));
                        request.Method = "POST";
                        request.ContentLength = data.Length;
                        Stream stream = request.GetRequestStream();
                        stream.Write(data, 0, data.Length);
                        using (HttpWebResponse response = (HttpWebResponse)request.GetResponse())
                        {
                            response.Close();
                        }
                    }
                    catch (Exception ex){ }
                }
                Program.s_cancelToken.WaitHandle.WaitOne(30000);
            }
        }
    }
}
