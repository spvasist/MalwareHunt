using System;
using System.Collections.Generic;
using System.Configuration;
using System.IO;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using MalwareHuntShared;

namespace MalwareHuntAgent
{
    public class DataSender
    {
        static DataSender m_instance = new DataSender();
        Thread m_aggregatorThread;
        const int DATA_SEND_INTERVAL = 10000;
        public static DataSender Instance
        {
            get
            {
                return m_instance;
            }
        }

        private DataSender()
        {

        }
        public void Start()
        {
            m_aggregatorThread = new Thread(SendData);
            m_aggregatorThread.Start();
        }

        void SendData()
        {
            while (!Program.s_cancelToken.IsCancellationRequested)
            {                

                try
                {
                    var files = Directory.EnumerateFiles(Program.DATA_DIR);
                    foreach (var file in files)
                    {
                        bool success = true;
                        try
                        {
                            byte[] data = File.ReadAllBytes(file);
                            if (data.Length < 3)
                                continue;
                            string activityName = Path.GetFileName(file);
                            string hostname = ConfigurationManager.AppSettings["HOSTNAME"];
                            int port = int.Parse(ConfigurationManager.AppSettings["PORT"]);

                            HttpWebRequest request = (HttpWebRequest)WebRequest.CreateHttp(string.Format("http://{0}:{1}?type={2}&machineid={3}&activityname={4}"
                                , hostname
                                , port
                                , "data"
                                , Program.s_machine.ID
                                , activityName));
                            request.Method = "POST";
                            request.ContentLength = data.Length;
                            Stream stream = request.GetRequestStream();
                            stream.Write(data, 0, data.Length);
                            try
                            {
                                using (HttpWebResponse response = (HttpWebResponse)request.GetResponse())
                                {
                                    response.Close();
                                }
                            }
                            catch(Exception ex)
                            {                                
                                {
                                    Program.SendMachineInfo();
                                    success = false;
                                    Logger.Log(ex);
                                }
                            }
                        }
                        catch (Exception ex)
                        {
                            Logger.Log(ex);
                            success = false;
                        }
                        if (success)
                        {
                            try
                            {
                                File.Delete(file);
                            }
                            catch(Exception ex) { Logger.Log(ex); }
                        }
                            
                    }
                }
                catch(Exception ex) { Logger.Log(ex); }
                Program.s_cancelToken.WaitHandle.WaitOne(DATA_SEND_INTERVAL);
            }
        }
    }
}
