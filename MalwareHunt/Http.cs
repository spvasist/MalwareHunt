using System;
using System.Collections.Generic;
using System.Configuration;
using System.IO;
using System.Linq;
using System.Net;
using System.Text;
using System.Threading;
using System.Threading.Tasks;
using MalwareHuntServer;

namespace MalwareHuntServer
{
    class Http
    {
        private static Thread m_serverThread;
        private static HttpListener m_listener;
        private static int m_port = int.Parse(ConfigurationManager.AppSettings["PORT"]);

        public static int Port
        {
            get { return m_port; }
            private set { }
        }

        public static void Start()
        {
            Initialize();
        }


        /// <summary>
        /// Stop server and dispose all functions.
        /// </summary>
        public static void Stop()
        {
            m_serverThread.Abort();
            m_listener.Stop();
        }

        private static void Listen()
        {
            m_listener = new HttpListener();
            m_listener.Prefixes.Add("http://*:" + Port.ToString() + "/");
            m_listener.Start();
            while (true)
            {
                try
                {
                    HttpListenerContext context = m_listener.GetContext();
                    Task.Factory.StartNew(() =>
                    {
                        Process(context.Request, context.Response);
                    });
                }
                catch (Exception ex)
                {

                }
            }
        }

        private static void Process(HttpListenerRequest request, HttpListenerResponse response)
        {
            if (request.QueryString["type"] == "data")
            {
                string machineID = request.QueryString["machineid"];
                try
                {
                    if(!Directory.Exists(Program.SERVER_DATA_DIR+"\\"+machineID))
                    {
                        Directory.CreateDirectory(Program.SERVER_DATA_DIR + "\\" + machineID);
                    }
                    string activityName = request.QueryString["activityname"];
                    string filePath = Program.SERVER_DATA_DIR + "\\" + machineID+"\\"+activityName;
                    long length = request.ContentLength64;
                    byte[] data = new byte[length];
                    request.InputStream.Read(data, 0, (int)length);
                    File.WriteAllBytes(filePath, data);
                }
                catch(Exception ex)
                {

                }
            }
            else if(request.QueryString["type"]=="info")
            {

            }
            response.StatusCode = (int)HttpStatusCode.OK;
            response.Close();
        }

        private static void Initialize()
        {
            m_serverThread = new Thread(Listen);
            m_serverThread.Start();
        }
    }
}
