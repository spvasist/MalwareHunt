using System;
using System.Collections.Generic;
using System.Configuration;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using MalwareHunt.Objects;
using MongoDB.Bson;
using MongoDB.Driver;

namespace MalwareHunt
{
    public class DBManager
    {
        static DBManager m_instance = null;

        public static DBManager Instance
        {
            get
            {
                if (m_instance == null)
                    m_instance = new DBManager();
                return m_instance;
            }
        }

        IMongoClient m_client;
        public IMongoDatabase Database {  get; private set; }
        private DBManager()
        {
            m_client = new MongoClient();
            string dbName = ConfigurationManager.AppSettings["DBNAME"];
            Database = m_client.GetDatabase(dbName);
            //InsertData();
        }

        public void InsertData()
        {
            try
            {
                Database.CreateCollection("machines");
                var options = new CreateIndexOptions() { Unique = true };
                var coll = Database.GetCollection<Machine>("machines");
                var field = new StringFieldDefinition<Machine>("IP");
                var indexDefinition = new IndexKeysDefinitionBuilder<Machine>().Ascending(field);
                coll.Indexes.CreateOne(indexDefinition, options);
            }
            catch { }
            var col = Database.GetCollection<Machine>("machines");
            Module module = new Module() { Name = "Module1" };
            Machine machine = new Machine() { Name = "SomeName", IP = "192.168.1.10" };
            machine.Modules = new List<Module>();
            machine.Modules.Add(module);
            col.InsertOne(machine);

            var filter = Builders<Machine>.Filter.Eq<string>(o => o.Name, "SomeName");
            var result = col.Find<Machine>(filter);
            var list = result.ToList();

        }
    }
}
