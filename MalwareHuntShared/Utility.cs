using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography;
using System.Text;
using System.Threading.Tasks;
using Newtonsoft.Json;

namespace MalwareHuntShared
{
    public class Utility
    {
        public static string CreateSHA256(string input)
        {
            byte[] inputBytes = System.Text.Encoding.ASCII.GetBytes(input);
            return CreateSHA256(inputBytes);

        }
        public static string CreateSHA256(byte[] input)
        {
            using (SHA256 sha256 = SHA256.Create())
            {                
                byte[] hashBytes = sha256.ComputeHash(input);

                // Convert the byte array to hexadecimal string
                StringBuilder sb = new StringBuilder();
                for (int i = 0; i < hashBytes.Length; i++)
                {
                    sb.Append(hashBytes[i].ToString("X2"));
                }
                return sb.ToString();
            }
        }

        public static string Serialize(Object obj)
        {
            var settings = new JsonSerializerSettings();
            settings.TypeNameHandling = TypeNameHandling.Objects;

            return Newtonsoft.Json.JsonConvert.SerializeObject(obj, Formatting.Indented, settings);
        }

        public static T Deserialize<T>(string json)
        {
            var settings = new JsonSerializerSettings();
            settings.TypeNameHandling = TypeNameHandling.Objects;
            
            return (T) Newtonsoft.Json.JsonConvert.DeserializeObject<T>(json, settings);
        }
    }
}
