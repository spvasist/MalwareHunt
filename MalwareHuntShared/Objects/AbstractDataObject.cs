using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using MongoDB.Bson;
using MongoDB.Bson.Serialization.Attributes;
using Newtonsoft.Json;
using static MalwareHuntShared.Utility;

namespace MalwareHuntShared.Objects
{
    public abstract class AbstractDataObject : IDataObject
    {
        ObjectId m_objectID = ObjectId.GenerateNewId();
        [BsonElement("_id")]
        [JsonConverter(typeof(ObjectIdConverter))]
        public ObjectId ID
        {
            get
            {
                return m_objectID;
            }
            set
            {
                m_objectID = value;
            }
        }
        

        public virtual string Identity
        {
            get
            {
                return ID.ToString();
            }
            set { }
        }

        public override bool Equals(object obj)
        {
            AbstractDataObject o = obj as AbstractDataObject;
            if (o == null)
                return false;

            return o.Identity == Identity;
        }

        public override int GetHashCode()
        {
            return ID.ToString().GetHashCode();
        }
    }
    public interface IDataObject
    {
        [BsonElement("_id")]
        ObjectId ID { get; }

        string Identity { get; set; }
    }
}
