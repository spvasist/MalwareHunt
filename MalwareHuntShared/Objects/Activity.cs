using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using MongoDB.Bson;
using MongoDB.Bson.Serialization.Attributes;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using static MalwareHuntShared.Objects.AbstractActivity;
using static MalwareHuntShared.Utility;

namespace MalwareHuntShared.Objects
{
    public abstract class AbstractActivity : AbstractDataObject, IActivity
    {

        public virtual ActivityType TypeOfActivity
        {
            get
            {
                return ActivityType.Other;
            }
            set { }
        }

        public ActivityLevel LevelOfActivity
        {
            get; set;
        }

        public virtual string PrintableActivity
        {
            get
            {
                return "";
            }
            set { }
        }
        DateTime m_time = DateTime.Now;

        public DateTime Time
        {
            get
            {
                return m_time;
            }
            set { }
        }

        String m_path;
        public String Path
        {
            get { return m_path; }
            set
            {
                m_path = value;
                try
                {
                    SHA256 = Utility.CreateSHA256(m_path);
                }
                catch { }
            }
        }

        public virtual string CollectionName { get; }
        [JsonProperty(ItemTypeNameHandling = TypeNameHandling.Auto, TypeNameHandling = TypeNameHandling.Auto)]
        public List<string> MachineIDList { get; set; } = new List<string>();
        [JsonProperty(ItemTypeNameHandling = TypeNameHandling.Auto, TypeNameHandling = TypeNameHandling.Auto)]
        public List<string> ModuleIDList { get; set; } = new List<string>();

        string m_sha256;
        public string SHA256
        {
            get
            {
                if (!string.IsNullOrEmpty(m_path))
                {
                    m_sha256 = Utility.CreateSHA256(m_path);
                }
                return m_sha256;
            }
            set
            {
                m_sha256 = value;
            }
        }
    }

    public class ProcessActivity : AbstractActivity
    {
        public override ActivityType TypeOfActivity
        {
            get
            {
                return ActivityType.Process;
            }
            set { }
        }

        public override string CollectionName
        {
            get
            {
                return "process_activity";
            }
        }
    }

    public class FileActivity : AbstractActivity
    {
        public override ActivityType TypeOfActivity
        {
            get
            {
                return ActivityType.File;
            }
            set { }
        }

        public FileActivityType TypeOfFileActivity
        {
            get; set;
        }

        public string OldFilePath
        {
            get; set;
        }
        public override string CollectionName
        {
            get
            {
                return "file_activity";
            }
        }
    }

    public class NetworkActivity : AbstractActivity
    {
        public override ActivityType TypeOfActivity
        {
            get
            {
                return ActivityType.Network;
            }
            set { }
        }
        public override string CollectionName
        {
            get
            {
                return "network_activity";
            }
        }
    }

    public class ModuleActivity : AbstractActivity
    {
        public override ActivityType TypeOfActivity
        {
            get
            {
                return ActivityType._Module;
            }
            set { }
        }

        public override string CollectionName
        {
            get
            {
                return "modules_stage";
            }
        }
    }
    public interface IActivityObject
    {
        ActivityType TypeOfActivity { get; set; }
        String PrintableActivity { get; set; }
    }

    public interface IActivity : IActivityObject
    {
        ActivityLevel LevelOfActivity { get; set; }
        string SHA256
        {
            get;set;
        }
    }

    public enum ActivityType
    {
        Other = 0,
        File = 1,
        Process = 2,
        Network = 3,
        _Module = 4,
        _Machine = 5
    }

    public enum ActivityLevel
    {
        Blacklisted = 1,
        High = 2,
        Medium = 3,
        Low = 4,
        None = 5
    }

    public enum FileActivityType
    {
        Created = 1,
        //
        // Summary:
        //     The deletion of a file or folder.
        Deleted = 2,
        //
        // Summary:
        //     The change of a file or folder. The types of changes include: changes to size,
        //     attributes, security settings, last write, and last access time.
        Changed = 4,
        //
        // Summary:
        //     The renaming of a file or folder.
        Renamed = 8,
        //
        // Summary:
        //     The creation, deletion, change, or renaming of a file or folder.
        All = 15
    }
}
