using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using MalwareHuntShared.Objects;
using MongoDB.Bson;
using MongoDB.Bson.Serialization.Attributes;

namespace MalwareHunt.Objects
{
    public class Module : AbstractDataObject
    {
        public string Name { get; set; }
        public string HashSHA256 { get; set; }
        public List<AbstractActivity> Activities { get; set; } = new List<AbstractActivity>();
        int m_score = 0;
        public int Score
        {
            get
            {
                m_score = 0;
                if (Activities == null || Activities.Count == 0)
                {
                    return m_score;
                }

                var blacklisted = Activities.Where(o => o.LevelOfActivity == ActivityLevel.Blacklisted);
                if (blacklisted!= null && blacklisted.Count() > 0)
                { m_score = 512; return m_score; }

                var high = Activities.Where(o => o.LevelOfActivity == ActivityLevel.High);
                if(high != null)
                {
                    int h = high.Count();
                    if (h > 7) h = 7;
                    m_score += h;
                    m_score <<= 3;
                }
                var med = Activities.Where(o => o.LevelOfActivity == ActivityLevel.Medium);
                if (med != null)
                {
                    int m = med.Count();
                    if (m > 7) m = 7;
                    m_score += m;
                    m_score <<= 3;
                }
                var low = Activities.Where(o => o.LevelOfActivity == ActivityLevel.Low);
                if (low != null)
                {
                    int l = low.Count();
                    if (l > 7) l = 7;
                    m_score += l;
                }
                return m_score;
            }
            set { }
        }
    }
}
